// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: systematic/program.proto

#ifndef PROTOBUF_systematic_2fprogram_2eproto__INCLUDED
#define PROTOBUF_systematic_2fprogram_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace systematic {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_systematic_2fprogram_2eproto();
void protobuf_AssignDesc_systematic_2fprogram_2eproto();
void protobuf_ShutdownFile_systematic_2fprogram_2eproto();

class ThreadProto;
class SObjectProto;
class DObjectProto;
class ProgramProto;
class ActionProto;
class StateProto;
class ExecutionProto;

enum Operation {
  OP_INVALID = 0,
  OP_THREAD_START = 1,
  OP_THREAD_END = 2,
  OP_THREAD_CREATE = 3,
  OP_THREAD_JOIN = 4,
  OP_MUTEX_LOCK = 11,
  OP_MUTEX_UNLOCK = 12,
  OP_MUTEX_TRYLOCK = 13,
  OP_COND_WAIT = 21,
  OP_COND_SIGNAL = 22,
  OP_COND_BROADCAST = 23,
  OP_COND_TIMEDWAIT = 24,
  OP_BARRIER_INIT = 31,
  OP_BARRIER_WAIT = 32,
  OP_MEM_READ = 41,
  OP_MEM_WRITE = 42,
  OP_SLEEP = 51,
  OP_USLEEP = 52,
  OP_NANOSLEEP = 53,
  OP_SCHED_YIELD = 54
};
bool Operation_IsValid(int value);
const Operation Operation_MIN = OP_INVALID;
const Operation Operation_MAX = OP_SCHED_YIELD;
const int Operation_ARRAYSIZE = Operation_MAX + 1;

const ::google::protobuf::EnumDescriptor* Operation_descriptor();
inline const ::std::string& Operation_Name(Operation value) {
  return ::google::protobuf::internal::NameOfEnum(
    Operation_descriptor(), value);
}
inline bool Operation_Parse(
    const ::std::string& name, Operation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Operation>(
    Operation_descriptor(), name, value);
}
// ===================================================================

class ThreadProto : public ::google::protobuf::Message {
 public:
  ThreadProto();
  virtual ~ThreadProto();
  
  ThreadProto(const ThreadProto& from);
  
  inline ThreadProto& operator=(const ThreadProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ThreadProto& default_instance();
  
  void Swap(ThreadProto* other);
  
  // implements Message ----------------------------------------------
  
  ThreadProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThreadProto& from);
  void MergeFrom(const ThreadProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // optional uint32 creator_uid = 2;
  inline bool has_creator_uid() const;
  inline void clear_creator_uid();
  static const int kCreatorUidFieldNumber = 2;
  inline ::google::protobuf::uint32 creator_uid() const;
  inline void set_creator_uid(::google::protobuf::uint32 value);
  
  // optional uint32 creator_idx = 3;
  inline bool has_creator_idx() const;
  inline void clear_creator_idx();
  static const int kCreatorIdxFieldNumber = 3;
  inline ::google::protobuf::uint32 creator_idx() const;
  inline void set_creator_idx(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:systematic.ThreadProto)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_creator_uid();
  inline void clear_has_creator_uid();
  inline void set_has_creator_idx();
  inline void clear_has_creator_idx();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 creator_uid_;
  ::google::protobuf::uint32 creator_idx_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_systematic_2fprogram_2eproto();
  friend void protobuf_AssignDesc_systematic_2fprogram_2eproto();
  friend void protobuf_ShutdownFile_systematic_2fprogram_2eproto();
  
  void InitAsDefaultInstance();
  static ThreadProto* default_instance_;
};
// -------------------------------------------------------------------

class SObjectProto : public ::google::protobuf::Message {
 public:
  SObjectProto();
  virtual ~SObjectProto();
  
  SObjectProto(const SObjectProto& from);
  
  inline SObjectProto& operator=(const SObjectProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SObjectProto& default_instance();
  
  void Swap(SObjectProto* other);
  
  // implements Message ----------------------------------------------
  
  SObjectProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SObjectProto& from);
  void MergeFrom(const SObjectProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 image_id = 2;
  inline bool has_image_id() const;
  inline void clear_image_id();
  static const int kImageIdFieldNumber = 2;
  inline ::google::protobuf::uint32 image_id() const;
  inline void set_image_id(::google::protobuf::uint32 value);
  
  // required uint64 offset = 3;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 3;
  inline ::google::protobuf::uint64 offset() const;
  inline void set_offset(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:systematic.SObjectProto)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_image_id();
  inline void clear_has_image_id();
  inline void set_has_offset();
  inline void clear_has_offset();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 image_id_;
  ::google::protobuf::uint64 offset_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_systematic_2fprogram_2eproto();
  friend void protobuf_AssignDesc_systematic_2fprogram_2eproto();
  friend void protobuf_ShutdownFile_systematic_2fprogram_2eproto();
  
  void InitAsDefaultInstance();
  static SObjectProto* default_instance_;
};
// -------------------------------------------------------------------

class DObjectProto : public ::google::protobuf::Message {
 public:
  DObjectProto();
  virtual ~DObjectProto();
  
  DObjectProto(const DObjectProto& from);
  
  inline DObjectProto& operator=(const DObjectProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DObjectProto& default_instance();
  
  void Swap(DObjectProto* other);
  
  // implements Message ----------------------------------------------
  
  DObjectProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DObjectProto& from);
  void MergeFrom(const DObjectProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);
  
  // required uint32 creator_uid = 2;
  inline bool has_creator_uid() const;
  inline void clear_creator_uid();
  static const int kCreatorUidFieldNumber = 2;
  inline ::google::protobuf::uint32 creator_uid() const;
  inline void set_creator_uid(::google::protobuf::uint32 value);
  
  // required uint32 creator_inst_id = 3;
  inline bool has_creator_inst_id() const;
  inline void clear_creator_inst_id();
  static const int kCreatorInstIdFieldNumber = 3;
  inline ::google::protobuf::uint32 creator_inst_id() const;
  inline void set_creator_inst_id(::google::protobuf::uint32 value);
  
  // required uint32 creator_idx = 4;
  inline bool has_creator_idx() const;
  inline void clear_creator_idx();
  static const int kCreatorIdxFieldNumber = 4;
  inline ::google::protobuf::uint32 creator_idx() const;
  inline void set_creator_idx(::google::protobuf::uint32 value);
  
  // required uint64 offset = 5;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 5;
  inline ::google::protobuf::uint64 offset() const;
  inline void set_offset(::google::protobuf::uint64 value);
  
  // @@protoc_insertion_point(class_scope:systematic.DObjectProto)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_creator_uid();
  inline void clear_has_creator_uid();
  inline void set_has_creator_inst_id();
  inline void clear_has_creator_inst_id();
  inline void set_has_creator_idx();
  inline void clear_has_creator_idx();
  inline void set_has_offset();
  inline void clear_has_offset();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 creator_uid_;
  ::google::protobuf::uint32 creator_inst_id_;
  ::google::protobuf::uint32 creator_idx_;
  ::google::protobuf::uint64 offset_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_systematic_2fprogram_2eproto();
  friend void protobuf_AssignDesc_systematic_2fprogram_2eproto();
  friend void protobuf_ShutdownFile_systematic_2fprogram_2eproto();
  
  void InitAsDefaultInstance();
  static DObjectProto* default_instance_;
};
// -------------------------------------------------------------------

class ProgramProto : public ::google::protobuf::Message {
 public:
  ProgramProto();
  virtual ~ProgramProto();
  
  ProgramProto(const ProgramProto& from);
  
  inline ProgramProto& operator=(const ProgramProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProgramProto& default_instance();
  
  void Swap(ProgramProto* other);
  
  // implements Message ----------------------------------------------
  
  ProgramProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProgramProto& from);
  void MergeFrom(const ProgramProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .systematic.ThreadProto thread = 1;
  inline int thread_size() const;
  inline void clear_thread();
  static const int kThreadFieldNumber = 1;
  inline const ::systematic::ThreadProto& thread(int index) const;
  inline ::systematic::ThreadProto* mutable_thread(int index);
  inline ::systematic::ThreadProto* add_thread();
  inline const ::google::protobuf::RepeatedPtrField< ::systematic::ThreadProto >&
      thread() const;
  inline ::google::protobuf::RepeatedPtrField< ::systematic::ThreadProto >*
      mutable_thread();
  
  // repeated .systematic.SObjectProto sobject = 2;
  inline int sobject_size() const;
  inline void clear_sobject();
  static const int kSobjectFieldNumber = 2;
  inline const ::systematic::SObjectProto& sobject(int index) const;
  inline ::systematic::SObjectProto* mutable_sobject(int index);
  inline ::systematic::SObjectProto* add_sobject();
  inline const ::google::protobuf::RepeatedPtrField< ::systematic::SObjectProto >&
      sobject() const;
  inline ::google::protobuf::RepeatedPtrField< ::systematic::SObjectProto >*
      mutable_sobject();
  
  // repeated .systematic.DObjectProto dobject = 3;
  inline int dobject_size() const;
  inline void clear_dobject();
  static const int kDobjectFieldNumber = 3;
  inline const ::systematic::DObjectProto& dobject(int index) const;
  inline ::systematic::DObjectProto* mutable_dobject(int index);
  inline ::systematic::DObjectProto* add_dobject();
  inline const ::google::protobuf::RepeatedPtrField< ::systematic::DObjectProto >&
      dobject() const;
  inline ::google::protobuf::RepeatedPtrField< ::systematic::DObjectProto >*
      mutable_dobject();
  
  // @@protoc_insertion_point(class_scope:systematic.ProgramProto)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::systematic::ThreadProto > thread_;
  ::google::protobuf::RepeatedPtrField< ::systematic::SObjectProto > sobject_;
  ::google::protobuf::RepeatedPtrField< ::systematic::DObjectProto > dobject_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_systematic_2fprogram_2eproto();
  friend void protobuf_AssignDesc_systematic_2fprogram_2eproto();
  friend void protobuf_ShutdownFile_systematic_2fprogram_2eproto();
  
  void InitAsDefaultInstance();
  static ProgramProto* default_instance_;
};
// -------------------------------------------------------------------

class ActionProto : public ::google::protobuf::Message {
 public:
  ActionProto();
  virtual ~ActionProto();
  
  ActionProto(const ActionProto& from);
  
  inline ActionProto& operator=(const ActionProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ActionProto& default_instance();
  
  void Swap(ActionProto* other);
  
  // implements Message ----------------------------------------------
  
  ActionProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActionProto& from);
  void MergeFrom(const ActionProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 thd_uid = 1;
  inline bool has_thd_uid() const;
  inline void clear_thd_uid();
  static const int kThdUidFieldNumber = 1;
  inline ::google::protobuf::uint32 thd_uid() const;
  inline void set_thd_uid(::google::protobuf::uint32 value);
  
  // optional uint32 obj_uid = 2;
  inline bool has_obj_uid() const;
  inline void clear_obj_uid();
  static const int kObjUidFieldNumber = 2;
  inline ::google::protobuf::uint32 obj_uid() const;
  inline void set_obj_uid(::google::protobuf::uint32 value);
  
  // required .systematic.Operation op = 3;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 3;
  inline systematic::Operation op() const;
  inline void set_op(systematic::Operation value);
  
  // optional uint32 inst_id = 4;
  inline bool has_inst_id() const;
  inline void clear_inst_id();
  static const int kInstIdFieldNumber = 4;
  inline ::google::protobuf::uint32 inst_id() const;
  inline void set_inst_id(::google::protobuf::uint32 value);
  
  // optional uint64 tc = 5;
  inline bool has_tc() const;
  inline void clear_tc();
  static const int kTcFieldNumber = 5;
  inline ::google::protobuf::uint64 tc() const;
  inline void set_tc(::google::protobuf::uint64 value);
  
  // optional uint64 oc = 6;
  inline bool has_oc() const;
  inline void clear_oc();
  static const int kOcFieldNumber = 6;
  inline ::google::protobuf::uint64 oc() const;
  inline void set_oc(::google::protobuf::uint64 value);
  
  // optional bool yield = 7;
  inline bool has_yield() const;
  inline void clear_yield();
  static const int kYieldFieldNumber = 7;
  inline bool yield() const;
  inline void set_yield(bool value);
  
  // @@protoc_insertion_point(class_scope:systematic.ActionProto)
 private:
  inline void set_has_thd_uid();
  inline void clear_has_thd_uid();
  inline void set_has_obj_uid();
  inline void clear_has_obj_uid();
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_inst_id();
  inline void clear_has_inst_id();
  inline void set_has_tc();
  inline void clear_has_tc();
  inline void set_has_oc();
  inline void clear_has_oc();
  inline void set_has_yield();
  inline void clear_has_yield();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 thd_uid_;
  ::google::protobuf::uint32 obj_uid_;
  int op_;
  ::google::protobuf::uint32 inst_id_;
  ::google::protobuf::uint64 tc_;
  ::google::protobuf::uint64 oc_;
  bool yield_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_systematic_2fprogram_2eproto();
  friend void protobuf_AssignDesc_systematic_2fprogram_2eproto();
  friend void protobuf_ShutdownFile_systematic_2fprogram_2eproto();
  
  void InitAsDefaultInstance();
  static ActionProto* default_instance_;
};
// -------------------------------------------------------------------

class StateProto : public ::google::protobuf::Message {
 public:
  StateProto();
  virtual ~StateProto();
  
  StateProto(const StateProto& from);
  
  inline StateProto& operator=(const StateProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StateProto& default_instance();
  
  void Swap(StateProto* other);
  
  // implements Message ----------------------------------------------
  
  StateProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StateProto& from);
  void MergeFrom(const StateProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated uint32 enabled = 1;
  inline int enabled_size() const;
  inline void clear_enabled();
  static const int kEnabledFieldNumber = 1;
  inline ::google::protobuf::uint32 enabled(int index) const;
  inline void set_enabled(int index, ::google::protobuf::uint32 value);
  inline void add_enabled(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      enabled() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_enabled();
  
  // optional uint32 taken = 2;
  inline bool has_taken() const;
  inline void clear_taken();
  static const int kTakenFieldNumber = 2;
  inline ::google::protobuf::uint32 taken() const;
  inline void set_taken(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:systematic.StateProto)
 private:
  inline void set_has_taken();
  inline void clear_has_taken();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > enabled_;
  ::google::protobuf::uint32 taken_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_systematic_2fprogram_2eproto();
  friend void protobuf_AssignDesc_systematic_2fprogram_2eproto();
  friend void protobuf_ShutdownFile_systematic_2fprogram_2eproto();
  
  void InitAsDefaultInstance();
  static StateProto* default_instance_;
};
// -------------------------------------------------------------------

class ExecutionProto : public ::google::protobuf::Message {
 public:
  ExecutionProto();
  virtual ~ExecutionProto();
  
  ExecutionProto(const ExecutionProto& from);
  
  inline ExecutionProto& operator=(const ExecutionProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionProto& default_instance();
  
  void Swap(ExecutionProto* other);
  
  // implements Message ----------------------------------------------
  
  ExecutionProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExecutionProto& from);
  void MergeFrom(const ExecutionProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .systematic.ActionProto action = 1;
  inline int action_size() const;
  inline void clear_action();
  static const int kActionFieldNumber = 1;
  inline const ::systematic::ActionProto& action(int index) const;
  inline ::systematic::ActionProto* mutable_action(int index);
  inline ::systematic::ActionProto* add_action();
  inline const ::google::protobuf::RepeatedPtrField< ::systematic::ActionProto >&
      action() const;
  inline ::google::protobuf::RepeatedPtrField< ::systematic::ActionProto >*
      mutable_action();
  
  // repeated .systematic.StateProto state = 2;
  inline int state_size() const;
  inline void clear_state();
  static const int kStateFieldNumber = 2;
  inline const ::systematic::StateProto& state(int index) const;
  inline ::systematic::StateProto* mutable_state(int index);
  inline ::systematic::StateProto* add_state();
  inline const ::google::protobuf::RepeatedPtrField< ::systematic::StateProto >&
      state() const;
  inline ::google::protobuf::RepeatedPtrField< ::systematic::StateProto >*
      mutable_state();
  
  // @@protoc_insertion_point(class_scope:systematic.ExecutionProto)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::systematic::ActionProto > action_;
  ::google::protobuf::RepeatedPtrField< ::systematic::StateProto > state_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_systematic_2fprogram_2eproto();
  friend void protobuf_AssignDesc_systematic_2fprogram_2eproto();
  friend void protobuf_ShutdownFile_systematic_2fprogram_2eproto();
  
  void InitAsDefaultInstance();
  static ExecutionProto* default_instance_;
};
// ===================================================================


// ===================================================================

// ThreadProto

// required uint32 uid = 1;
inline bool ThreadProto::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ThreadProto::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ThreadProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ThreadProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 ThreadProto::uid() const {
  return uid_;
}
inline void ThreadProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint32 creator_uid = 2;
inline bool ThreadProto::has_creator_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ThreadProto::set_has_creator_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ThreadProto::clear_has_creator_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ThreadProto::clear_creator_uid() {
  creator_uid_ = 0u;
  clear_has_creator_uid();
}
inline ::google::protobuf::uint32 ThreadProto::creator_uid() const {
  return creator_uid_;
}
inline void ThreadProto::set_creator_uid(::google::protobuf::uint32 value) {
  set_has_creator_uid();
  creator_uid_ = value;
}

// optional uint32 creator_idx = 3;
inline bool ThreadProto::has_creator_idx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ThreadProto::set_has_creator_idx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ThreadProto::clear_has_creator_idx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ThreadProto::clear_creator_idx() {
  creator_idx_ = 0u;
  clear_has_creator_idx();
}
inline ::google::protobuf::uint32 ThreadProto::creator_idx() const {
  return creator_idx_;
}
inline void ThreadProto::set_creator_idx(::google::protobuf::uint32 value) {
  set_has_creator_idx();
  creator_idx_ = value;
}

// -------------------------------------------------------------------

// SObjectProto

// required uint32 uid = 1;
inline bool SObjectProto::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SObjectProto::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SObjectProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SObjectProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SObjectProto::uid() const {
  return uid_;
}
inline void SObjectProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 image_id = 2;
inline bool SObjectProto::has_image_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SObjectProto::set_has_image_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SObjectProto::clear_has_image_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SObjectProto::clear_image_id() {
  image_id_ = 0u;
  clear_has_image_id();
}
inline ::google::protobuf::uint32 SObjectProto::image_id() const {
  return image_id_;
}
inline void SObjectProto::set_image_id(::google::protobuf::uint32 value) {
  set_has_image_id();
  image_id_ = value;
}

// required uint64 offset = 3;
inline bool SObjectProto::has_offset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SObjectProto::set_has_offset() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SObjectProto::clear_has_offset() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SObjectProto::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 SObjectProto::offset() const {
  return offset_;
}
inline void SObjectProto::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
}

// -------------------------------------------------------------------

// DObjectProto

// required uint32 uid = 1;
inline bool DObjectProto::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DObjectProto::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DObjectProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DObjectProto::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 DObjectProto::uid() const {
  return uid_;
}
inline void DObjectProto::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required uint32 creator_uid = 2;
inline bool DObjectProto::has_creator_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DObjectProto::set_has_creator_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DObjectProto::clear_has_creator_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DObjectProto::clear_creator_uid() {
  creator_uid_ = 0u;
  clear_has_creator_uid();
}
inline ::google::protobuf::uint32 DObjectProto::creator_uid() const {
  return creator_uid_;
}
inline void DObjectProto::set_creator_uid(::google::protobuf::uint32 value) {
  set_has_creator_uid();
  creator_uid_ = value;
}

// required uint32 creator_inst_id = 3;
inline bool DObjectProto::has_creator_inst_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DObjectProto::set_has_creator_inst_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DObjectProto::clear_has_creator_inst_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DObjectProto::clear_creator_inst_id() {
  creator_inst_id_ = 0u;
  clear_has_creator_inst_id();
}
inline ::google::protobuf::uint32 DObjectProto::creator_inst_id() const {
  return creator_inst_id_;
}
inline void DObjectProto::set_creator_inst_id(::google::protobuf::uint32 value) {
  set_has_creator_inst_id();
  creator_inst_id_ = value;
}

// required uint32 creator_idx = 4;
inline bool DObjectProto::has_creator_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DObjectProto::set_has_creator_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DObjectProto::clear_has_creator_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DObjectProto::clear_creator_idx() {
  creator_idx_ = 0u;
  clear_has_creator_idx();
}
inline ::google::protobuf::uint32 DObjectProto::creator_idx() const {
  return creator_idx_;
}
inline void DObjectProto::set_creator_idx(::google::protobuf::uint32 value) {
  set_has_creator_idx();
  creator_idx_ = value;
}

// required uint64 offset = 5;
inline bool DObjectProto::has_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DObjectProto::set_has_offset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DObjectProto::clear_has_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DObjectProto::clear_offset() {
  offset_ = GOOGLE_ULONGLONG(0);
  clear_has_offset();
}
inline ::google::protobuf::uint64 DObjectProto::offset() const {
  return offset_;
}
inline void DObjectProto::set_offset(::google::protobuf::uint64 value) {
  set_has_offset();
  offset_ = value;
}

// -------------------------------------------------------------------

// ProgramProto

// repeated .systematic.ThreadProto thread = 1;
inline int ProgramProto::thread_size() const {
  return thread_.size();
}
inline void ProgramProto::clear_thread() {
  thread_.Clear();
}
inline const ::systematic::ThreadProto& ProgramProto::thread(int index) const {
  return thread_.Get(index);
}
inline ::systematic::ThreadProto* ProgramProto::mutable_thread(int index) {
  return thread_.Mutable(index);
}
inline ::systematic::ThreadProto* ProgramProto::add_thread() {
  return thread_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::systematic::ThreadProto >&
ProgramProto::thread() const {
  return thread_;
}
inline ::google::protobuf::RepeatedPtrField< ::systematic::ThreadProto >*
ProgramProto::mutable_thread() {
  return &thread_;
}

// repeated .systematic.SObjectProto sobject = 2;
inline int ProgramProto::sobject_size() const {
  return sobject_.size();
}
inline void ProgramProto::clear_sobject() {
  sobject_.Clear();
}
inline const ::systematic::SObjectProto& ProgramProto::sobject(int index) const {
  return sobject_.Get(index);
}
inline ::systematic::SObjectProto* ProgramProto::mutable_sobject(int index) {
  return sobject_.Mutable(index);
}
inline ::systematic::SObjectProto* ProgramProto::add_sobject() {
  return sobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::systematic::SObjectProto >&
ProgramProto::sobject() const {
  return sobject_;
}
inline ::google::protobuf::RepeatedPtrField< ::systematic::SObjectProto >*
ProgramProto::mutable_sobject() {
  return &sobject_;
}

// repeated .systematic.DObjectProto dobject = 3;
inline int ProgramProto::dobject_size() const {
  return dobject_.size();
}
inline void ProgramProto::clear_dobject() {
  dobject_.Clear();
}
inline const ::systematic::DObjectProto& ProgramProto::dobject(int index) const {
  return dobject_.Get(index);
}
inline ::systematic::DObjectProto* ProgramProto::mutable_dobject(int index) {
  return dobject_.Mutable(index);
}
inline ::systematic::DObjectProto* ProgramProto::add_dobject() {
  return dobject_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::systematic::DObjectProto >&
ProgramProto::dobject() const {
  return dobject_;
}
inline ::google::protobuf::RepeatedPtrField< ::systematic::DObjectProto >*
ProgramProto::mutable_dobject() {
  return &dobject_;
}

// -------------------------------------------------------------------

// ActionProto

// required uint32 thd_uid = 1;
inline bool ActionProto::has_thd_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActionProto::set_has_thd_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActionProto::clear_has_thd_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActionProto::clear_thd_uid() {
  thd_uid_ = 0u;
  clear_has_thd_uid();
}
inline ::google::protobuf::uint32 ActionProto::thd_uid() const {
  return thd_uid_;
}
inline void ActionProto::set_thd_uid(::google::protobuf::uint32 value) {
  set_has_thd_uid();
  thd_uid_ = value;
}

// optional uint32 obj_uid = 2;
inline bool ActionProto::has_obj_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActionProto::set_has_obj_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActionProto::clear_has_obj_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActionProto::clear_obj_uid() {
  obj_uid_ = 0u;
  clear_has_obj_uid();
}
inline ::google::protobuf::uint32 ActionProto::obj_uid() const {
  return obj_uid_;
}
inline void ActionProto::set_obj_uid(::google::protobuf::uint32 value) {
  set_has_obj_uid();
  obj_uid_ = value;
}

// required .systematic.Operation op = 3;
inline bool ActionProto::has_op() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActionProto::set_has_op() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActionProto::clear_has_op() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActionProto::clear_op() {
  op_ = 0;
  clear_has_op();
}
inline systematic::Operation ActionProto::op() const {
  return static_cast< systematic::Operation >(op_);
}
inline void ActionProto::set_op(systematic::Operation value) {
  GOOGLE_DCHECK(systematic::Operation_IsValid(value));
  set_has_op();
  op_ = value;
}

// optional uint32 inst_id = 4;
inline bool ActionProto::has_inst_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ActionProto::set_has_inst_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ActionProto::clear_has_inst_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ActionProto::clear_inst_id() {
  inst_id_ = 0u;
  clear_has_inst_id();
}
inline ::google::protobuf::uint32 ActionProto::inst_id() const {
  return inst_id_;
}
inline void ActionProto::set_inst_id(::google::protobuf::uint32 value) {
  set_has_inst_id();
  inst_id_ = value;
}

// optional uint64 tc = 5;
inline bool ActionProto::has_tc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ActionProto::set_has_tc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ActionProto::clear_has_tc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ActionProto::clear_tc() {
  tc_ = GOOGLE_ULONGLONG(0);
  clear_has_tc();
}
inline ::google::protobuf::uint64 ActionProto::tc() const {
  return tc_;
}
inline void ActionProto::set_tc(::google::protobuf::uint64 value) {
  set_has_tc();
  tc_ = value;
}

// optional uint64 oc = 6;
inline bool ActionProto::has_oc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ActionProto::set_has_oc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ActionProto::clear_has_oc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ActionProto::clear_oc() {
  oc_ = GOOGLE_ULONGLONG(0);
  clear_has_oc();
}
inline ::google::protobuf::uint64 ActionProto::oc() const {
  return oc_;
}
inline void ActionProto::set_oc(::google::protobuf::uint64 value) {
  set_has_oc();
  oc_ = value;
}

// optional bool yield = 7;
inline bool ActionProto::has_yield() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ActionProto::set_has_yield() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ActionProto::clear_has_yield() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ActionProto::clear_yield() {
  yield_ = false;
  clear_has_yield();
}
inline bool ActionProto::yield() const {
  return yield_;
}
inline void ActionProto::set_yield(bool value) {
  set_has_yield();
  yield_ = value;
}

// -------------------------------------------------------------------

// StateProto

// repeated uint32 enabled = 1;
inline int StateProto::enabled_size() const {
  return enabled_.size();
}
inline void StateProto::clear_enabled() {
  enabled_.Clear();
}
inline ::google::protobuf::uint32 StateProto::enabled(int index) const {
  return enabled_.Get(index);
}
inline void StateProto::set_enabled(int index, ::google::protobuf::uint32 value) {
  enabled_.Set(index, value);
}
inline void StateProto::add_enabled(::google::protobuf::uint32 value) {
  enabled_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StateProto::enabled() const {
  return enabled_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StateProto::mutable_enabled() {
  return &enabled_;
}

// optional uint32 taken = 2;
inline bool StateProto::has_taken() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateProto::set_has_taken() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StateProto::clear_has_taken() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StateProto::clear_taken() {
  taken_ = 0u;
  clear_has_taken();
}
inline ::google::protobuf::uint32 StateProto::taken() const {
  return taken_;
}
inline void StateProto::set_taken(::google::protobuf::uint32 value) {
  set_has_taken();
  taken_ = value;
}

// -------------------------------------------------------------------

// ExecutionProto

// repeated .systematic.ActionProto action = 1;
inline int ExecutionProto::action_size() const {
  return action_.size();
}
inline void ExecutionProto::clear_action() {
  action_.Clear();
}
inline const ::systematic::ActionProto& ExecutionProto::action(int index) const {
  return action_.Get(index);
}
inline ::systematic::ActionProto* ExecutionProto::mutable_action(int index) {
  return action_.Mutable(index);
}
inline ::systematic::ActionProto* ExecutionProto::add_action() {
  return action_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::systematic::ActionProto >&
ExecutionProto::action() const {
  return action_;
}
inline ::google::protobuf::RepeatedPtrField< ::systematic::ActionProto >*
ExecutionProto::mutable_action() {
  return &action_;
}

// repeated .systematic.StateProto state = 2;
inline int ExecutionProto::state_size() const {
  return state_.size();
}
inline void ExecutionProto::clear_state() {
  state_.Clear();
}
inline const ::systematic::StateProto& ExecutionProto::state(int index) const {
  return state_.Get(index);
}
inline ::systematic::StateProto* ExecutionProto::mutable_state(int index) {
  return state_.Mutable(index);
}
inline ::systematic::StateProto* ExecutionProto::add_state() {
  return state_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::systematic::StateProto >&
ExecutionProto::state() const {
  return state_;
}
inline ::google::protobuf::RepeatedPtrField< ::systematic::StateProto >*
ExecutionProto::mutable_state() {
  return &state_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace systematic

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< systematic::Operation>() {
  return systematic::Operation_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_systematic_2fprogram_2eproto__INCLUDED
