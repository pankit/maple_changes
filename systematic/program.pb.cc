// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "systematic/program.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace systematic {

namespace {

const ::google::protobuf::Descriptor* ThreadProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ThreadProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SObjectProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SObjectProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* DObjectProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DObjectProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProgramProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProgramProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActionProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* StateProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StateProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExecutionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExecutionProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Operation_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_systematic_2fprogram_2eproto() {
  protobuf_AddDesc_systematic_2fprogram_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "systematic/program.proto");
  GOOGLE_CHECK(file != NULL);
  ThreadProto_descriptor_ = file->message_type(0);
  static const int ThreadProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadProto, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadProto, creator_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadProto, creator_idx_),
  };
  ThreadProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ThreadProto_descriptor_,
      ThreadProto::default_instance_,
      ThreadProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThreadProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ThreadProto));
  SObjectProto_descriptor_ = file->message_type(1);
  static const int SObjectProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SObjectProto, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SObjectProto, image_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SObjectProto, offset_),
  };
  SObjectProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SObjectProto_descriptor_,
      SObjectProto::default_instance_,
      SObjectProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SObjectProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SObjectProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SObjectProto));
  DObjectProto_descriptor_ = file->message_type(2);
  static const int DObjectProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DObjectProto, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DObjectProto, creator_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DObjectProto, creator_inst_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DObjectProto, creator_idx_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DObjectProto, offset_),
  };
  DObjectProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DObjectProto_descriptor_,
      DObjectProto::default_instance_,
      DObjectProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DObjectProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DObjectProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DObjectProto));
  ProgramProto_descriptor_ = file->message_type(3);
  static const int ProgramProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramProto, thread_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramProto, sobject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramProto, dobject_),
  };
  ProgramProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ProgramProto_descriptor_,
      ProgramProto::default_instance_,
      ProgramProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProgramProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ProgramProto));
  ActionProto_descriptor_ = file->message_type(4);
  static const int ActionProto_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, thd_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, obj_uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, op_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, inst_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, tc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, oc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, yield_),
  };
  ActionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActionProto_descriptor_,
      ActionProto::default_instance_,
      ActionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActionProto));
  StateProto_descriptor_ = file->message_type(5);
  static const int StateProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateProto, enabled_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateProto, taken_),
  };
  StateProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StateProto_descriptor_,
      StateProto::default_instance_,
      StateProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StateProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StateProto));
  ExecutionProto_descriptor_ = file->message_type(6);
  static const int ExecutionProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecutionProto, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecutionProto, state_),
  };
  ExecutionProto_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ExecutionProto_descriptor_,
      ExecutionProto::default_instance_,
      ExecutionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecutionProto, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExecutionProto, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ExecutionProto));
  Operation_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_systematic_2fprogram_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ThreadProto_descriptor_, &ThreadProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SObjectProto_descriptor_, &SObjectProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DObjectProto_descriptor_, &DObjectProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ProgramProto_descriptor_, &ProgramProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActionProto_descriptor_, &ActionProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StateProto_descriptor_, &StateProto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ExecutionProto_descriptor_, &ExecutionProto::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_systematic_2fprogram_2eproto() {
  delete ThreadProto::default_instance_;
  delete ThreadProto_reflection_;
  delete SObjectProto::default_instance_;
  delete SObjectProto_reflection_;
  delete DObjectProto::default_instance_;
  delete DObjectProto_reflection_;
  delete ProgramProto::default_instance_;
  delete ProgramProto_reflection_;
  delete ActionProto::default_instance_;
  delete ActionProto_reflection_;
  delete StateProto::default_instance_;
  delete StateProto_reflection_;
  delete ExecutionProto::default_instance_;
  delete ExecutionProto_reflection_;
}

void protobuf_AddDesc_systematic_2fprogram_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030systematic/program.proto\022\nsystematic\"D"
    "\n\013ThreadProto\022\013\n\003uid\030\001 \002(\r\022\023\n\013creator_ui"
    "d\030\002 \001(\r\022\023\n\013creator_idx\030\003 \001(\r\"=\n\014SObjectP"
    "roto\022\013\n\003uid\030\001 \002(\r\022\020\n\010image_id\030\002 \002(\r\022\016\n\006o"
    "ffset\030\003 \002(\004\"n\n\014DObjectProto\022\013\n\003uid\030\001 \002(\r"
    "\022\023\n\013creator_uid\030\002 \002(\r\022\027\n\017creator_inst_id"
    "\030\003 \002(\r\022\023\n\013creator_idx\030\004 \002(\r\022\016\n\006offset\030\005 "
    "\002(\004\"\215\001\n\014ProgramProto\022\'\n\006thread\030\001 \003(\0132\027.s"
    "ystematic.ThreadProto\022)\n\007sobject\030\002 \003(\0132\030"
    ".systematic.SObjectProto\022)\n\007dobject\030\003 \003("
    "\0132\030.systematic.DObjectProto\"\212\001\n\013ActionPr"
    "oto\022\017\n\007thd_uid\030\001 \002(\r\022\017\n\007obj_uid\030\002 \001(\r\022!\n"
    "\002op\030\003 \002(\0162\025.systematic.Operation\022\017\n\007inst"
    "_id\030\004 \001(\r\022\n\n\002tc\030\005 \001(\004\022\n\n\002oc\030\006 \001(\004\022\r\n\005yie"
    "ld\030\007 \001(\010\",\n\nStateProto\022\017\n\007enabled\030\001 \003(\r\022"
    "\r\n\005taken\030\002 \001(\r\"`\n\016ExecutionProto\022\'\n\006acti"
    "on\030\001 \003(\0132\027.systematic.ActionProto\022%\n\005sta"
    "te\030\002 \003(\0132\026.systematic.StateProto*\217\003\n\tOpe"
    "ration\022\016\n\nOP_INVALID\020\000\022\023\n\017OP_THREAD_STAR"
    "T\020\001\022\021\n\rOP_THREAD_END\020\002\022\024\n\020OP_THREAD_CREA"
    "TE\020\003\022\022\n\016OP_THREAD_JOIN\020\004\022\021\n\rOP_MUTEX_LOC"
    "K\020\013\022\023\n\017OP_MUTEX_UNLOCK\020\014\022\024\n\020OP_MUTEX_TRY"
    "LOCK\020\r\022\020\n\014OP_COND_WAIT\020\025\022\022\n\016OP_COND_SIGN"
    "AL\020\026\022\025\n\021OP_COND_BROADCAST\020\027\022\025\n\021OP_COND_T"
    "IMEDWAIT\020\030\022\023\n\017OP_BARRIER_INIT\020\037\022\023\n\017OP_BA"
    "RRIER_WAIT\020 \022\017\n\013OP_MEM_READ\020)\022\020\n\014OP_MEM_"
    "WRITE\020*\022\014\n\010OP_SLEEP\0203\022\r\n\tOP_USLEEP\0204\022\020\n\014"
    "OP_NANOSLEEP\0205\022\022\n\016OP_SCHED_YIELD\0206", 1114);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "systematic/program.proto", &protobuf_RegisterTypes);
  ThreadProto::default_instance_ = new ThreadProto();
  SObjectProto::default_instance_ = new SObjectProto();
  DObjectProto::default_instance_ = new DObjectProto();
  ProgramProto::default_instance_ = new ProgramProto();
  ActionProto::default_instance_ = new ActionProto();
  StateProto::default_instance_ = new StateProto();
  ExecutionProto::default_instance_ = new ExecutionProto();
  ThreadProto::default_instance_->InitAsDefaultInstance();
  SObjectProto::default_instance_->InitAsDefaultInstance();
  DObjectProto::default_instance_->InitAsDefaultInstance();
  ProgramProto::default_instance_->InitAsDefaultInstance();
  ActionProto::default_instance_->InitAsDefaultInstance();
  StateProto::default_instance_->InitAsDefaultInstance();
  ExecutionProto::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_systematic_2fprogram_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_systematic_2fprogram_2eproto {
  StaticDescriptorInitializer_systematic_2fprogram_2eproto() {
    protobuf_AddDesc_systematic_2fprogram_2eproto();
  }
} static_descriptor_initializer_systematic_2fprogram_2eproto_;

const ::google::protobuf::EnumDescriptor* Operation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Operation_descriptor_;
}
bool Operation_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 11:
    case 12:
    case 13:
    case 21:
    case 22:
    case 23:
    case 24:
    case 31:
    case 32:
    case 41:
    case 42:
    case 51:
    case 52:
    case 53:
    case 54:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int ThreadProto::kUidFieldNumber;
const int ThreadProto::kCreatorUidFieldNumber;
const int ThreadProto::kCreatorIdxFieldNumber;
#endif  // !_MSC_VER

ThreadProto::ThreadProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ThreadProto::InitAsDefaultInstance() {
}

ThreadProto::ThreadProto(const ThreadProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ThreadProto::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  creator_uid_ = 0u;
  creator_idx_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ThreadProto::~ThreadProto() {
  SharedDtor();
}

void ThreadProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ThreadProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThreadProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ThreadProto_descriptor_;
}

const ThreadProto& ThreadProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_systematic_2fprogram_2eproto();  return *default_instance_;
}

ThreadProto* ThreadProto::default_instance_ = NULL;

ThreadProto* ThreadProto::New() const {
  return new ThreadProto;
}

void ThreadProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = 0u;
    creator_uid_ = 0u;
    creator_idx_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ThreadProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_creator_uid;
        break;
      }
      
      // optional uint32 creator_uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_creator_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creator_uid_)));
          set_has_creator_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_creator_idx;
        break;
      }
      
      // optional uint32 creator_idx = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_creator_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creator_idx_)));
          set_has_creator_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ThreadProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }
  
  // optional uint32 creator_uid = 2;
  if (has_creator_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->creator_uid(), output);
  }
  
  // optional uint32 creator_idx = 3;
  if (has_creator_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->creator_idx(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ThreadProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }
  
  // optional uint32 creator_uid = 2;
  if (has_creator_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->creator_uid(), target);
  }
  
  // optional uint32 creator_idx = 3;
  if (has_creator_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->creator_idx(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ThreadProto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }
    
    // optional uint32 creator_uid = 2;
    if (has_creator_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creator_uid());
    }
    
    // optional uint32 creator_idx = 3;
    if (has_creator_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creator_idx());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThreadProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ThreadProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ThreadProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ThreadProto::MergeFrom(const ThreadProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_creator_uid()) {
      set_creator_uid(from.creator_uid());
    }
    if (from.has_creator_idx()) {
      set_creator_idx(from.creator_idx());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ThreadProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThreadProto::CopyFrom(const ThreadProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ThreadProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void ThreadProto::Swap(ThreadProto* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(creator_uid_, other->creator_uid_);
    std::swap(creator_idx_, other->creator_idx_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ThreadProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ThreadProto_descriptor_;
  metadata.reflection = ThreadProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SObjectProto::kUidFieldNumber;
const int SObjectProto::kImageIdFieldNumber;
const int SObjectProto::kOffsetFieldNumber;
#endif  // !_MSC_VER

SObjectProto::SObjectProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void SObjectProto::InitAsDefaultInstance() {
}

SObjectProto::SObjectProto(const SObjectProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void SObjectProto::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  image_id_ = 0u;
  offset_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SObjectProto::~SObjectProto() {
  SharedDtor();
}

void SObjectProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SObjectProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SObjectProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SObjectProto_descriptor_;
}

const SObjectProto& SObjectProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_systematic_2fprogram_2eproto();  return *default_instance_;
}

SObjectProto* SObjectProto::default_instance_ = NULL;

SObjectProto* SObjectProto::New() const {
  return new SObjectProto;
}

void SObjectProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = 0u;
    image_id_ = 0u;
    offset_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SObjectProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_image_id;
        break;
      }
      
      // required uint32 image_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_image_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &image_id_)));
          set_has_image_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_offset;
        break;
      }
      
      // required uint64 offset = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void SObjectProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }
  
  // required uint32 image_id = 2;
  if (has_image_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->image_id(), output);
  }
  
  // required uint64 offset = 3;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* SObjectProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }
  
  // required uint32 image_id = 2;
  if (has_image_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->image_id(), target);
  }
  
  // required uint64 offset = 3;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int SObjectProto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }
    
    // required uint32 image_id = 2;
    if (has_image_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->image_id());
    }
    
    // required uint64 offset = 3;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SObjectProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SObjectProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SObjectProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SObjectProto::MergeFrom(const SObjectProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_image_id()) {
      set_image_id(from.image_id());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SObjectProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SObjectProto::CopyFrom(const SObjectProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SObjectProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void SObjectProto::Swap(SObjectProto* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(image_id_, other->image_id_);
    std::swap(offset_, other->offset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SObjectProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SObjectProto_descriptor_;
  metadata.reflection = SObjectProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int DObjectProto::kUidFieldNumber;
const int DObjectProto::kCreatorUidFieldNumber;
const int DObjectProto::kCreatorInstIdFieldNumber;
const int DObjectProto::kCreatorIdxFieldNumber;
const int DObjectProto::kOffsetFieldNumber;
#endif  // !_MSC_VER

DObjectProto::DObjectProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DObjectProto::InitAsDefaultInstance() {
}

DObjectProto::DObjectProto(const DObjectProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DObjectProto::SharedCtor() {
  _cached_size_ = 0;
  uid_ = 0u;
  creator_uid_ = 0u;
  creator_inst_id_ = 0u;
  creator_idx_ = 0u;
  offset_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DObjectProto::~DObjectProto() {
  SharedDtor();
}

void DObjectProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DObjectProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DObjectProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DObjectProto_descriptor_;
}

const DObjectProto& DObjectProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_systematic_2fprogram_2eproto();  return *default_instance_;
}

DObjectProto* DObjectProto::default_instance_ = NULL;

DObjectProto* DObjectProto::New() const {
  return new DObjectProto;
}

void DObjectProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    uid_ = 0u;
    creator_uid_ = 0u;
    creator_inst_id_ = 0u;
    creator_idx_ = 0u;
    offset_ = GOOGLE_ULONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DObjectProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_creator_uid;
        break;
      }
      
      // required uint32 creator_uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_creator_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creator_uid_)));
          set_has_creator_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_creator_inst_id;
        break;
      }
      
      // required uint32 creator_inst_id = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_creator_inst_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creator_inst_id_)));
          set_has_creator_inst_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_creator_idx;
        break;
      }
      
      // required uint32 creator_idx = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_creator_idx:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &creator_idx_)));
          set_has_creator_idx();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_offset;
        break;
      }
      
      // required uint64 offset = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
          set_has_offset();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DObjectProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }
  
  // required uint32 creator_uid = 2;
  if (has_creator_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->creator_uid(), output);
  }
  
  // required uint32 creator_inst_id = 3;
  if (has_creator_inst_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->creator_inst_id(), output);
  }
  
  // required uint32 creator_idx = 4;
  if (has_creator_idx()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->creator_idx(), output);
  }
  
  // required uint64 offset = 5;
  if (has_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->offset(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DObjectProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }
  
  // required uint32 creator_uid = 2;
  if (has_creator_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->creator_uid(), target);
  }
  
  // required uint32 creator_inst_id = 3;
  if (has_creator_inst_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->creator_inst_id(), target);
  }
  
  // required uint32 creator_idx = 4;
  if (has_creator_idx()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->creator_idx(), target);
  }
  
  // required uint64 offset = 5;
  if (has_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->offset(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DObjectProto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }
    
    // required uint32 creator_uid = 2;
    if (has_creator_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creator_uid());
    }
    
    // required uint32 creator_inst_id = 3;
    if (has_creator_inst_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creator_inst_id());
    }
    
    // required uint32 creator_idx = 4;
    if (has_creator_idx()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->creator_idx());
    }
    
    // required uint64 offset = 5;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DObjectProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DObjectProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DObjectProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DObjectProto::MergeFrom(const DObjectProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_creator_uid()) {
      set_creator_uid(from.creator_uid());
    }
    if (from.has_creator_inst_id()) {
      set_creator_inst_id(from.creator_inst_id());
    }
    if (from.has_creator_idx()) {
      set_creator_idx(from.creator_idx());
    }
    if (from.has_offset()) {
      set_offset(from.offset());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DObjectProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DObjectProto::CopyFrom(const DObjectProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DObjectProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;
  
  return true;
}

void DObjectProto::Swap(DObjectProto* other) {
  if (other != this) {
    std::swap(uid_, other->uid_);
    std::swap(creator_uid_, other->creator_uid_);
    std::swap(creator_inst_id_, other->creator_inst_id_);
    std::swap(creator_idx_, other->creator_idx_);
    std::swap(offset_, other->offset_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DObjectProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DObjectProto_descriptor_;
  metadata.reflection = DObjectProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ProgramProto::kThreadFieldNumber;
const int ProgramProto::kSobjectFieldNumber;
const int ProgramProto::kDobjectFieldNumber;
#endif  // !_MSC_VER

ProgramProto::ProgramProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ProgramProto::InitAsDefaultInstance() {
}

ProgramProto::ProgramProto(const ProgramProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ProgramProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ProgramProto::~ProgramProto() {
  SharedDtor();
}

void ProgramProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ProgramProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProgramProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProgramProto_descriptor_;
}

const ProgramProto& ProgramProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_systematic_2fprogram_2eproto();  return *default_instance_;
}

ProgramProto* ProgramProto::default_instance_ = NULL;

ProgramProto* ProgramProto::New() const {
  return new ProgramProto;
}

void ProgramProto::Clear() {
  thread_.Clear();
  sobject_.Clear();
  dobject_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ProgramProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .systematic.ThreadProto thread = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_thread:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_thread()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_thread;
        if (input->ExpectTag(18)) goto parse_sobject;
        break;
      }
      
      // repeated .systematic.SObjectProto sobject = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sobject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sobject()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_sobject;
        if (input->ExpectTag(26)) goto parse_dobject;
        break;
      }
      
      // repeated .systematic.DObjectProto dobject = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dobject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dobject()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_dobject;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ProgramProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .systematic.ThreadProto thread = 1;
  for (int i = 0; i < this->thread_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->thread(i), output);
  }
  
  // repeated .systematic.SObjectProto sobject = 2;
  for (int i = 0; i < this->sobject_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sobject(i), output);
  }
  
  // repeated .systematic.DObjectProto dobject = 3;
  for (int i = 0; i < this->dobject_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->dobject(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ProgramProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .systematic.ThreadProto thread = 1;
  for (int i = 0; i < this->thread_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->thread(i), target);
  }
  
  // repeated .systematic.SObjectProto sobject = 2;
  for (int i = 0; i < this->sobject_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->sobject(i), target);
  }
  
  // repeated .systematic.DObjectProto dobject = 3;
  for (int i = 0; i < this->dobject_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->dobject(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ProgramProto::ByteSize() const {
  int total_size = 0;
  
  // repeated .systematic.ThreadProto thread = 1;
  total_size += 1 * this->thread_size();
  for (int i = 0; i < this->thread_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->thread(i));
  }
  
  // repeated .systematic.SObjectProto sobject = 2;
  total_size += 1 * this->sobject_size();
  for (int i = 0; i < this->sobject_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sobject(i));
  }
  
  // repeated .systematic.DObjectProto dobject = 3;
  total_size += 1 * this->dobject_size();
  for (int i = 0; i < this->dobject_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->dobject(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProgramProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ProgramProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ProgramProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ProgramProto::MergeFrom(const ProgramProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  thread_.MergeFrom(from.thread_);
  sobject_.MergeFrom(from.sobject_);
  dobject_.MergeFrom(from.dobject_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ProgramProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProgramProto::CopyFrom(const ProgramProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProgramProto::IsInitialized() const {
  
  for (int i = 0; i < thread_size(); i++) {
    if (!this->thread(i).IsInitialized()) return false;
  }
  for (int i = 0; i < sobject_size(); i++) {
    if (!this->sobject(i).IsInitialized()) return false;
  }
  for (int i = 0; i < dobject_size(); i++) {
    if (!this->dobject(i).IsInitialized()) return false;
  }
  return true;
}

void ProgramProto::Swap(ProgramProto* other) {
  if (other != this) {
    thread_.Swap(&other->thread_);
    sobject_.Swap(&other->sobject_);
    dobject_.Swap(&other->dobject_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ProgramProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProgramProto_descriptor_;
  metadata.reflection = ProgramProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActionProto::kThdUidFieldNumber;
const int ActionProto::kObjUidFieldNumber;
const int ActionProto::kOpFieldNumber;
const int ActionProto::kInstIdFieldNumber;
const int ActionProto::kTcFieldNumber;
const int ActionProto::kOcFieldNumber;
const int ActionProto::kYieldFieldNumber;
#endif  // !_MSC_VER

ActionProto::ActionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ActionProto::InitAsDefaultInstance() {
}

ActionProto::ActionProto(const ActionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ActionProto::SharedCtor() {
  _cached_size_ = 0;
  thd_uid_ = 0u;
  obj_uid_ = 0u;
  op_ = 0;
  inst_id_ = 0u;
  tc_ = GOOGLE_ULONGLONG(0);
  oc_ = GOOGLE_ULONGLONG(0);
  yield_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActionProto::~ActionProto() {
  SharedDtor();
}

void ActionProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ActionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActionProto_descriptor_;
}

const ActionProto& ActionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_systematic_2fprogram_2eproto();  return *default_instance_;
}

ActionProto* ActionProto::default_instance_ = NULL;

ActionProto* ActionProto::New() const {
  return new ActionProto;
}

void ActionProto::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    thd_uid_ = 0u;
    obj_uid_ = 0u;
    op_ = 0;
    inst_id_ = 0u;
    tc_ = GOOGLE_ULONGLONG(0);
    oc_ = GOOGLE_ULONGLONG(0);
    yield_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 thd_uid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &thd_uid_)));
          set_has_thd_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_obj_uid;
        break;
      }
      
      // optional uint32 obj_uid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_obj_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &obj_uid_)));
          set_has_obj_uid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_op;
        break;
      }
      
      // required .systematic.Operation op = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_op:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (systematic::Operation_IsValid(value)) {
            set_op(static_cast< systematic::Operation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_inst_id;
        break;
      }
      
      // optional uint32 inst_id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inst_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inst_id_)));
          set_has_inst_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_tc;
        break;
      }
      
      // optional uint64 tc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_tc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tc_)));
          set_has_tc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_oc;
        break;
      }
      
      // optional uint64 oc = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_oc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &oc_)));
          set_has_oc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_yield;
        break;
      }
      
      // optional bool yield = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_yield:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &yield_)));
          set_has_yield();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ActionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 thd_uid = 1;
  if (has_thd_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->thd_uid(), output);
  }
  
  // optional uint32 obj_uid = 2;
  if (has_obj_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->obj_uid(), output);
  }
  
  // required .systematic.Operation op = 3;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->op(), output);
  }
  
  // optional uint32 inst_id = 4;
  if (has_inst_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->inst_id(), output);
  }
  
  // optional uint64 tc = 5;
  if (has_tc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->tc(), output);
  }
  
  // optional uint64 oc = 6;
  if (has_oc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->oc(), output);
  }
  
  // optional bool yield = 7;
  if (has_yield()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->yield(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ActionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 thd_uid = 1;
  if (has_thd_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->thd_uid(), target);
  }
  
  // optional uint32 obj_uid = 2;
  if (has_obj_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->obj_uid(), target);
  }
  
  // required .systematic.Operation op = 3;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->op(), target);
  }
  
  // optional uint32 inst_id = 4;
  if (has_inst_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->inst_id(), target);
  }
  
  // optional uint64 tc = 5;
  if (has_tc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->tc(), target);
  }
  
  // optional uint64 oc = 6;
  if (has_oc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->oc(), target);
  }
  
  // optional bool yield = 7;
  if (has_yield()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->yield(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ActionProto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 thd_uid = 1;
    if (has_thd_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->thd_uid());
    }
    
    // optional uint32 obj_uid = 2;
    if (has_obj_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->obj_uid());
    }
    
    // required .systematic.Operation op = 3;
    if (has_op()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
    }
    
    // optional uint32 inst_id = 4;
    if (has_inst_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inst_id());
    }
    
    // optional uint64 tc = 5;
    if (has_tc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tc());
    }
    
    // optional uint64 oc = 6;
    if (has_oc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->oc());
    }
    
    // optional bool yield = 7;
    if (has_yield()) {
      total_size += 1 + 1;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActionProto::MergeFrom(const ActionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_thd_uid()) {
      set_thd_uid(from.thd_uid());
    }
    if (from.has_obj_uid()) {
      set_obj_uid(from.obj_uid());
    }
    if (from.has_op()) {
      set_op(from.op());
    }
    if (from.has_inst_id()) {
      set_inst_id(from.inst_id());
    }
    if (from.has_tc()) {
      set_tc(from.tc());
    }
    if (from.has_oc()) {
      set_oc(from.oc());
    }
    if (from.has_yield()) {
      set_yield(from.yield());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionProto::CopyFrom(const ActionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionProto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  
  return true;
}

void ActionProto::Swap(ActionProto* other) {
  if (other != this) {
    std::swap(thd_uid_, other->thd_uid_);
    std::swap(obj_uid_, other->obj_uid_);
    std::swap(op_, other->op_);
    std::swap(inst_id_, other->inst_id_);
    std::swap(tc_, other->tc_);
    std::swap(oc_, other->oc_);
    std::swap(yield_, other->yield_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActionProto_descriptor_;
  metadata.reflection = ActionProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StateProto::kEnabledFieldNumber;
const int StateProto::kTakenFieldNumber;
#endif  // !_MSC_VER

StateProto::StateProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StateProto::InitAsDefaultInstance() {
}

StateProto::StateProto(const StateProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StateProto::SharedCtor() {
  _cached_size_ = 0;
  taken_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StateProto::~StateProto() {
  SharedDtor();
}

void StateProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StateProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StateProto_descriptor_;
}

const StateProto& StateProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_systematic_2fprogram_2eproto();  return *default_instance_;
}

StateProto* StateProto::default_instance_ = NULL;

StateProto* StateProto::New() const {
  return new StateProto;
}

void StateProto::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    taken_ = 0u;
  }
  enabled_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StateProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 enabled = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_enabled:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8, input, this->mutable_enabled())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_enabled())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_enabled;
        if (input->ExpectTag(16)) goto parse_taken;
        break;
      }
      
      // optional uint32 taken = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_taken:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &taken_)));
          set_has_taken();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StateProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated uint32 enabled = 1;
  for (int i = 0; i < this->enabled_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->enabled(i), output);
  }
  
  // optional uint32 taken = 2;
  if (has_taken()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->taken(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StateProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated uint32 enabled = 1;
  for (int i = 0; i < this->enabled_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->enabled(i), target);
  }
  
  // optional uint32 taken = 2;
  if (has_taken()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->taken(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StateProto::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional uint32 taken = 2;
    if (has_taken()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->taken());
    }
    
  }
  // repeated uint32 enabled = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->enabled_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->enabled(i));
    }
    total_size += 1 * this->enabled_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StateProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StateProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StateProto::MergeFrom(const StateProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  enabled_.MergeFrom(from.enabled_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_taken()) {
      set_taken(from.taken());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StateProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateProto::CopyFrom(const StateProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateProto::IsInitialized() const {
  
  return true;
}

void StateProto::Swap(StateProto* other) {
  if (other != this) {
    enabled_.Swap(&other->enabled_);
    std::swap(taken_, other->taken_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StateProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StateProto_descriptor_;
  metadata.reflection = StateProto_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ExecutionProto::kActionFieldNumber;
const int ExecutionProto::kStateFieldNumber;
#endif  // !_MSC_VER

ExecutionProto::ExecutionProto()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ExecutionProto::InitAsDefaultInstance() {
}

ExecutionProto::ExecutionProto(const ExecutionProto& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ExecutionProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ExecutionProto::~ExecutionProto() {
  SharedDtor();
}

void ExecutionProto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExecutionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExecutionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExecutionProto_descriptor_;
}

const ExecutionProto& ExecutionProto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_systematic_2fprogram_2eproto();  return *default_instance_;
}

ExecutionProto* ExecutionProto::default_instance_ = NULL;

ExecutionProto* ExecutionProto::New() const {
  return new ExecutionProto;
}

void ExecutionProto::Clear() {
  action_.Clear();
  state_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ExecutionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .systematic.ActionProto action = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_action()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_action;
        if (input->ExpectTag(18)) goto parse_state;
        break;
      }
      
      // repeated .systematic.StateProto state = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_state()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_state;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ExecutionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .systematic.ActionProto action = 1;
  for (int i = 0; i < this->action_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->action(i), output);
  }
  
  // repeated .systematic.StateProto state = 2;
  for (int i = 0; i < this->state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->state(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ExecutionProto::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .systematic.ActionProto action = 1;
  for (int i = 0; i < this->action_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->action(i), target);
  }
  
  // repeated .systematic.StateProto state = 2;
  for (int i = 0; i < this->state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->state(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ExecutionProto::ByteSize() const {
  int total_size = 0;
  
  // repeated .systematic.ActionProto action = 1;
  total_size += 1 * this->action_size();
  for (int i = 0; i < this->action_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->action(i));
  }
  
  // repeated .systematic.StateProto state = 2;
  total_size += 1 * this->state_size();
  for (int i = 0; i < this->state_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->state(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExecutionProto::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ExecutionProto* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ExecutionProto*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ExecutionProto::MergeFrom(const ExecutionProto& from) {
  GOOGLE_CHECK_NE(&from, this);
  action_.MergeFrom(from.action_);
  state_.MergeFrom(from.state_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ExecutionProto::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionProto::CopyFrom(const ExecutionProto& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionProto::IsInitialized() const {
  
  for (int i = 0; i < action_size(); i++) {
    if (!this->action(i).IsInitialized()) return false;
  }
  return true;
}

void ExecutionProto::Swap(ExecutionProto* other) {
  if (other != this) {
    action_.Swap(&other->action_);
    state_.Swap(&other->state_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ExecutionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExecutionProto_descriptor_;
  metadata.reflection = ExecutionProto_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace systematic

// @@protoc_insertion_point(global_scope)
