// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: idiom/history.proto

#ifndef PROTOBUF_idiom_2fhistory_2eproto__INCLUDED
#define PROTOBUF_idiom_2fhistory_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace idiom {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_idiom_2fhistory_2eproto();
void protobuf_AssignDesc_idiom_2fhistory_2eproto();
void protobuf_ShutdownFile_idiom_2fhistory_2eproto();

class HistoryProto;
class HistoryTableProto;

// ===================================================================

class HistoryProto : public ::google::protobuf::Message {
 public:
  HistoryProto();
  virtual ~HistoryProto();
  
  HistoryProto(const HistoryProto& from);
  
  inline HistoryProto& operator=(const HistoryProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryProto& default_instance();
  
  void Swap(HistoryProto* other);
  
  // implements Message ----------------------------------------------
  
  HistoryProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryProto& from);
  void MergeFrom(const HistoryProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 iroot_id = 1;
  inline bool has_iroot_id() const;
  inline void clear_iroot_id();
  static const int kIrootIdFieldNumber = 1;
  inline ::google::protobuf::uint32 iroot_id() const;
  inline void set_iroot_id(::google::protobuf::uint32 value);
  
  // required uint32 seed = 2;
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 2;
  inline ::google::protobuf::uint32 seed() const;
  inline void set_seed(::google::protobuf::uint32 value);
  
  // optional bool success = 3;
  inline bool has_success() const;
  inline void clear_success();
  static const int kSuccessFieldNumber = 3;
  inline bool success() const;
  inline void set_success(bool value);
  
  // @@protoc_insertion_point(class_scope:idiom.HistoryProto)
 private:
  inline void set_has_iroot_id();
  inline void clear_has_iroot_id();
  inline void set_has_seed();
  inline void clear_has_seed();
  inline void set_has_success();
  inline void clear_has_success();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 iroot_id_;
  ::google::protobuf::uint32 seed_;
  bool success_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_idiom_2fhistory_2eproto();
  friend void protobuf_AssignDesc_idiom_2fhistory_2eproto();
  friend void protobuf_ShutdownFile_idiom_2fhistory_2eproto();
  
  void InitAsDefaultInstance();
  static HistoryProto* default_instance_;
};
// -------------------------------------------------------------------

class HistoryTableProto : public ::google::protobuf::Message {
 public:
  HistoryTableProto();
  virtual ~HistoryTableProto();
  
  HistoryTableProto(const HistoryTableProto& from);
  
  inline HistoryTableProto& operator=(const HistoryTableProto& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HistoryTableProto& default_instance();
  
  void Swap(HistoryTableProto* other);
  
  // implements Message ----------------------------------------------
  
  HistoryTableProto* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HistoryTableProto& from);
  void MergeFrom(const HistoryTableProto& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .idiom.HistoryProto history = 1;
  inline int history_size() const;
  inline void clear_history();
  static const int kHistoryFieldNumber = 1;
  inline const ::idiom::HistoryProto& history(int index) const;
  inline ::idiom::HistoryProto* mutable_history(int index);
  inline ::idiom::HistoryProto* add_history();
  inline const ::google::protobuf::RepeatedPtrField< ::idiom::HistoryProto >&
      history() const;
  inline ::google::protobuf::RepeatedPtrField< ::idiom::HistoryProto >*
      mutable_history();
  
  // @@protoc_insertion_point(class_scope:idiom.HistoryTableProto)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::idiom::HistoryProto > history_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_idiom_2fhistory_2eproto();
  friend void protobuf_AssignDesc_idiom_2fhistory_2eproto();
  friend void protobuf_ShutdownFile_idiom_2fhistory_2eproto();
  
  void InitAsDefaultInstance();
  static HistoryTableProto* default_instance_;
};
// ===================================================================


// ===================================================================

// HistoryProto

// required uint32 iroot_id = 1;
inline bool HistoryProto::has_iroot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HistoryProto::set_has_iroot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HistoryProto::clear_has_iroot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HistoryProto::clear_iroot_id() {
  iroot_id_ = 0u;
  clear_has_iroot_id();
}
inline ::google::protobuf::uint32 HistoryProto::iroot_id() const {
  return iroot_id_;
}
inline void HistoryProto::set_iroot_id(::google::protobuf::uint32 value) {
  set_has_iroot_id();
  iroot_id_ = value;
}

// required uint32 seed = 2;
inline bool HistoryProto::has_seed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HistoryProto::set_has_seed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HistoryProto::clear_has_seed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HistoryProto::clear_seed() {
  seed_ = 0u;
  clear_has_seed();
}
inline ::google::protobuf::uint32 HistoryProto::seed() const {
  return seed_;
}
inline void HistoryProto::set_seed(::google::protobuf::uint32 value) {
  set_has_seed();
  seed_ = value;
}

// optional bool success = 3;
inline bool HistoryProto::has_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HistoryProto::set_has_success() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HistoryProto::clear_has_success() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HistoryProto::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool HistoryProto::success() const {
  return success_;
}
inline void HistoryProto::set_success(bool value) {
  set_has_success();
  success_ = value;
}

// -------------------------------------------------------------------

// HistoryTableProto

// repeated .idiom.HistoryProto history = 1;
inline int HistoryTableProto::history_size() const {
  return history_.size();
}
inline void HistoryTableProto::clear_history() {
  history_.Clear();
}
inline const ::idiom::HistoryProto& HistoryTableProto::history(int index) const {
  return history_.Get(index);
}
inline ::idiom::HistoryProto* HistoryTableProto::mutable_history(int index) {
  return history_.Mutable(index);
}
inline ::idiom::HistoryProto* HistoryTableProto::add_history() {
  return history_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::idiom::HistoryProto >&
HistoryTableProto::history() const {
  return history_;
}
inline ::google::protobuf::RepeatedPtrField< ::idiom::HistoryProto >*
HistoryTableProto::mutable_history() {
  return &history_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace idiom

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_idiom_2fhistory_2eproto__INCLUDED
